@model SantaRamona.Backoffice.Models.Usuario

@{
    ViewData["Title"] = "Agregar Nuevo Usuario";
}

<style>
    .main-container {
        max-width: 900px;
        margin: 2rem auto;
        padding: 0 1rem;
        font-family: 'Segoe UI', sans-serif;
    }

    .form-title {
        text-align: center;
        color: #40ADB0;
        font-size: 2.2rem;
        margin-bottom: 1.2rem;
        text-transform: uppercase;
        letter-spacing: .5px;
    }

    .card {
        background: #fff;
        border: 2px solid #40ADB0;
        border-radius: 0.6rem;
        box-shadow: 0 2px 10px rgba(0,0,0,0.08);
        overflow: hidden;
    }

    .card-header {
        background: #40ADB0;
        color: #fff;
        padding: 1rem 1.2rem;
        font-weight: 700;
        border-bottom: 1px solid rgba(0,0,0,.05);
    }

    .card-body {
        padding: 1.2rem;
    }

    .toolbar {
        display: flex;
        justify-content: space-between;
        align-items: center;
        margin-bottom: 1rem;
    }

    /* Botones */
    .btn {
        padding: 0.55rem 1.0rem;
        font-size: 1rem;
        border-radius: 0.6rem;
        text-decoration: none;
        border: none;
        cursor: pointer;
        transition: background-color 0.25s, color 0.25s, border-color 0.25s;
        display: inline-flex;
        align-items: center;
        gap: .4rem;
    }

    .btn-outline {
        background: #fff;
        color: #40ADB0;
        border: 2px solid #40ADB0;
    }

        .btn-outline:hover {
            background: #EAF6F6;
        }

    .btn-primary {
        background: #40ADB0;
        color: #fff;
        border: 2px solid #40ADB0;
    }

        .btn-primary:hover {
            background: #2e888b;
            border-color: #2e888b;
        }

    .btn-neutral {
        background: #e0e0e0;
        color: #333;
        border: 2px solid #e0e0e0;
    }

        .btn-neutral:hover {
            background: #bdbdbd;
            border-color: #bdbdbd;
        }

    /* Inputs */
    label {
        display: block;
        font-weight: 700;
        margin-bottom: 0.4rem;
        color: #333;
    }

    input[type="text"],
    input[type="email"],
    input[type="password"],
    input[type="number"],
    input[type="date"],
    input[type="tel"] {
        width: 100%;
        padding: 0.6rem .8rem;
        border: 1px solid #ddd;
        border-radius: 0.4rem;
        font-size: 1rem;
        outline: none;
        box-sizing: border-box;
    }

        input[type="text"]:focus,
        input[type="email"]:focus,
        input[type="password"]:focus,
        input[type="number"]:focus,
        input[type="date"]:focus,
        input[type="tel"]:focus {
            border-color: #40ADB0;
            box-shadow: 0 0 0 4px rgba(64,173,176,0.15);
        }


    /* Mensajes */
    .alert-ok {
        margin: .8rem 0;
        padding: .7rem 1rem;
        border: 2px solid #40ADB0;
        background: #EAF6F6;
        border-radius: .6rem;
        color: #155e63;
        font-weight: 600;
    }

    .alert-error {
        margin: .8rem 0;
        padding: .7rem 1rem;
        border: 2px solid #ff6b6b;
        background: #ffecec;
        border-radius: .6rem;
        color: #a33;
        font-weight: 600;
        white-space: pre-wrap;
    }

    .field-error {
        color: #d9534f;
        font-weight: 600;
        margin-top: .25rem;
        display: block;
    }

    .form-actions {
        display: flex;
        gap: .6rem;
    }
</style>

<div class="main-container">
    <h2 class="form-title">Agregar Nuevo Usuario</h2>

    @if (ViewBag.Ok != null)
    {
        <div class="alert-ok">@ViewBag.Ok</div>
    }
    @if (ViewBag.ApiError != null)
    {
        <div class="alert-error">@ViewBag.ApiError</div>
    }

    <div class="card">
        <div class="card-header">Datos del Usuario</div>
        <div class="card-body">

            <div class="toolbar">
                <a asp-action="Index" class="btn btn-outline">← Volver al listado</a>

                <div class="form-actions">
                    <button type="submit" form="frm-crear" class="btn btn-primary">Guardar</button>
                    <button type="button" class="btn btn-primary" onclick="mostrarModalCancelar()">Cancelar</button>

                </div>
            </div>

            <form id="frm-crear" asp-action="Crear" method="post">
                <div style="margin-bottom:1rem;">
                    <label asp-for="nombre"></label>
                    <input asp-for="nombre" type="text" autocomplete="off" />
                    <span asp-validation-for="nombre" class="field-error"></span>
                </div>

                <div style="margin-bottom:1rem;">
                    <label asp-for="apellido"></label>
                    <input asp-for="apellido" type="text" autocomplete="off" />
                    <span asp-validation-for="apellido" class="field-error"></span>
                </div>

                <div style="margin-bottom:1rem;">
                    <label asp-for="email"></label>
                    <input asp-for="email" type="email" autocomplete="off" />
                    <span asp-validation-for="email" class="field-error"></span>
                </div>

                <div style="margin-bottom:1rem;">
                    <label asp-for="clave">Contraseña</label>
                    <input asp-for="clave" type="password" autocomplete="off" />
                    <span asp-validation-for="clave" class="field-error"></span>
                </div>

                <div style="margin-bottom:1rem;">
                    <label asp-for="direccion"></label>
                    <input asp-for="direccion" type="text" autocomplete="off" />
                    <span asp-validation-for="direccion" class="field-error"></span>
                </div>

                <div style="margin-bottom:1rem;">
                    <label asp-for="altura"></label>
                    <input asp-for="altura" type="text" autocomplete="off" />
                    <span asp-validation-for="altura" class="field-error"></span>
                </div>

                <div style="margin-bottom:1rem;">
                    <label asp-for="departamento"></label>
                    <input asp-for="departamento" type="text" autocomplete="off" />
                    <span asp-validation-for="departamento" class="field-error"></span>
                </div>

                <div style="margin-bottom:1rem;">
                    <label asp-for="telefono1"></label>
                    <input asp-for="telefono1" type="number" autocomplete="off" />
                    <span asp-validation-for="telefono1" class="field-error"></span>
                </div>

                <div style="margin-bottom:1rem;">
                    <label asp-for="telefono2"></label>
                    <input asp-for="telefono2" type="number" autocomplete="off" />
                    <span asp-validation-for="telefono2" class="field-error"></span>
                </div>

                <div style="margin-bottom:1rem;">
                    <label asp-for="fechaAlta">Fecha de Alta</label>
                    <input asp-for="fechaAlta" type="date" />
                    <span asp-validation-for="fechaAlta" class="field-error"></span>
                </div>

                @{
                    var estados = ViewBag.Estados as Dictionary<int, string> ?? new();
                }

                <div style="margin-bottom:1rem;">
                    <label asp-for="id_estadoUsuario">Estado</label>
                    <select asp-for="id_estadoUsuario" class="form-select" style="width:100%; padding:.6rem .8rem; border:1px solid #ddd; border-radius:.4rem; font-size:1rem;">
                        <option value="">-- Seleccione un estado --</option>
                        @foreach (var estado in estados)
                        {
                            <option value="@estado.Key">@estado.Value</option>
                        }
                        <option value="__nuevo__">➕ Agregar nuevo estado...</option>
                    </select>
                    <span asp-validation-for="id_estadoUsuario" class="field-error"></span>
                </div>

                <!-- Modal para crear estado -->
                <div id="modal-estado" style="display:none; position:fixed; inset:0; background:rgba(0,0,0,0.4); z-index:9999;">
                    <div style="background:#fff; width:380px; max-width:90%; margin:10% auto; padding:2rem; border-radius:1rem; box-shadow:0 6px 12px rgba(0,0,0,0.25); text-align:center;">
                        <h5 style="margin-bottom:1rem; color:#40ADB0;">Agregar nuevo estado</h5>

                        <input id="nuevo-estado" type="text" placeholder="Ingrese descripción"
                               style="width:100%; padding:.6rem; border:1px solid #ccc; border-radius:.4rem;" />
                        <!-- 👇 este span mostrará el mensaje -->
                        <span id="estado-error" style="display:none; color:#d9534f; font-size:.9rem; margin-top:.3rem; display:block;">
                            El campo no puede estar vacío.
                        </span>

                        <div style="margin-top:1.2rem; display:flex; justify-content:center; gap:.5rem;">
                            <button type="button" class="btn btn-primary" onclick="guardarNuevoEstado()">Guardar</button>
                            <button type="button" class="btn btn-neutral" onclick="cerrarModalEstado()">Cancelar</button>
                        </div>
                    </div>
                </div>

                <script>
                    const selectEstado = document.querySelector('[name="id_estadoUsuario"]');

                    // ⚡ esta es la ruta del método del Backoffice
                    const urlAgregarEstado = '@Url.Action("AgregarEstado", "Usuario")';

                    selectEstado.addEventListener('change', function () {
                        if (this.value === '__nuevo__') {
                            document.getElementById('modal-estado').style.display = 'block';
                            this.value = ''; // limpia selección
                        }
                    });

                    async function guardarNuevoEstado() {
                        const descripcion = document.getElementById('nuevo-estado').value.trim();
                        if (!descripcion) {
                            alert('Ingrese una descripción válida.');
                            return;
                        }

                        try {
                            // 🔹 Llamamos al Backoffice, que reenvía a la API real
                            const resp = await fetch(urlAgregarEstado, {
                                method: 'POST',
                                headers: { 'Content-Type': 'application/json' },
                                body: JSON.stringify({ descripcion })
                            });

                            if (!resp.ok) {
                                const text = await resp.text();
                                throw new Error(`Error ${resp.status}: ${text}`);
                            }

                            const data = await resp.json();

                            // ✅ Agregar opción al combo y seleccionarla
                            const option = new Option(data.descripcion, data.id);
                            selectEstado.add(option);
                            selectEstado.value = data.id;

                            cerrarModalEstado();
                        } catch (err) {
                            console.error(err);
                            alert('Error al guardar el estado: ' + err.message);
                        }
                    }

                    function cerrarModalEstado() {
                        document.getElementById('modal-estado').style.display = 'none';
                        document.getElementById('nuevo-estado').value = '';
                    }
                </script>

            </form>
        </div>
    </div>
</div>

@section Scripts {
    @{
        <!-- Modal de Confirmación -->
        <!-- Modal de Confirmación -->
        <div id="modal-cancelar" style="display:none; position:fixed; top:0; left:0; width:100%; height:100%; background:rgba(0,0,0,0.4); z-index:9999;">
            <div style="
                            background:#fff;
                            width:380px;
                            max-width:90%;
                            margin:10% auto;
                            padding:2rem 2rem 1.5rem;
                            border-radius:1rem;
                            box-shadow:0 6px 12px rgba(0,0,0,0.25);
                            text-align:center;
                            font-family:'Segoe UI', sans-serif;
                            ">
                <p style="font-size:1.2rem; color:#333; font-weight:600; margin-bottom:2rem;">
                    ¿Realmente desea cancelar?
                </p>
                <div style="display:flex; justify-content:center; gap:1rem;">
                    <a asp-action="Index" class="btn-modal">Sí</a>
                    <button type="button" class="btn-modal" onclick="cerrarModalCancelar()">No</button>
                </div>
            </div>
        </div>

        <style>
            .btn-modal {
                background-color: #40ADB0;
                color: white;
                border: none;
                padding: 0.6rem 1.2rem;
                font-size: 1rem;
                border-radius: 0.6rem;
                cursor: pointer;
                transition: background-color 0.3s;
                text-decoration: none;
                font-weight: 500;
            }

                .btn-modal:hover {
                    background-color: #2e888b;
                }
        </style>

        <script>
            function mostrarModalCancelar() {
                document.getElementById("modal-cancelar").style.display = "block";
            }
            function cerrarModalCancelar() {
                document.getElementById("modal-cancelar").style.display = "none";
            }
        </script>

        <script>
            const selectEstado = document.getElementById("select-estado");
            const urlAgregarEstado = '@Url.Action("AgregarEstado", "Usuario")';

            // Abre el modal cuando elige "Agregar nuevo estado"
            selectEstado.addEventListener("change", () => {
                if (selectEstado.value === "__nuevo__") {
                    document.getElementById("modal-estado").style.display = "block";
                    document.getElementById("nuevo-estado").focus();
                    selectEstado.value = ""; // limpia selección para evitar errores de validación
                }
            });

                       async function guardarNuevoEstado() {
                const input = document.getElementById("nuevo-estado");
                const errorSpan = document.getElementById("estado-error");
                const descripcion = input.value.trim();

                // 🔹 Validación visual
                if (!descripcion) {
                    input.style.border = "2px solid #d9534f";
                    errorSpan.style.display = "block";
                    input.focus();
                    return;
                } else {
                    input.style.border = "1px solid #ccc";
                    errorSpan.style.display = "none";
                }

                try {
                    const resp = await fetch('@Url.Action("AgregarEstado", "Usuario")', {
                        method: "POST",
                        headers: { "Content-Type": "application/json" },
                        body: JSON.stringify({ descripcion })
                    });

                    if (!resp.ok) {
                        const errText = await resp.text();
                        throw new Error(`Error ${resp.status}: ${errText}`);
                    }

                    const data = await resp.json();

                    const selectEstado = document.getElementById("select-estado");
                    const option = new Option(data.descripcion, data.id);
                    selectEstado.add(option);
                    selectEstado.value = data.id;

                    cerrarModalEstado();
                } catch (err) {
                    console.error(err);
                    alert("Error al guardar el estado: " + err.message);
                }
            }
            }

            function cerrarModalEstado() {
                document.getElementById("modal-estado").style.display = "none";
                document.getElementById("nuevo-estado").value = "";
            }
        </script>

    }
}

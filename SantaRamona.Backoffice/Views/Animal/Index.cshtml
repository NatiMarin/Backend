@model IEnumerable<SantaRamona.Backoffice.Models.Animal>
@{
    await Html.RenderPartialAsync("_AnimalTopNav");
}

@{
    ViewData["Title"] = "Lista de Animales";

    var especies = ViewBag.Especies as Dictionary<int, string> ?? new();
    var razas = ViewBag.Razas as Dictionary<int, string> ?? new();
    var tamanos = ViewBag.Tamanos as Dictionary<int, string> ?? new();
    var estados = ViewBag.Estados as Dictionary<int, string> ?? new();

    string Txt(Dictionary<int, string> d, int id) => d.TryGetValue(id, out var v) ? v : $"#{id}";
    string EdadTxt(int m) => m < 12 ? $"{m} {(m == 1 ? "mes" : "meses")}" : $"{m / 12} {((m / 12) == 1 ? "año" : "años")}";
}

<div class="container mt-4">
    <h1 class="text-center fw-bold" style="color:#2FA8A2; letter-spacing:.5px;">
        LISTA DE ANIMALES
    </h1>

    @if (ViewBag.Ok != null)
    {
        <div class="alert mt-3" role="alert"
             style="background:#E6F6F5; border:1px solid #2FA8A2; color:#155e59; border-radius:10px;">
            @ViewBag.Ok
        </div>
    }
    @if (ViewBag.ApiError != null)
    {
        <div class="alert mt-3" role="alert"
             style="background:#fff3f3; border:1px solid #d9534f; color:#a94442; border-radius:10px;">
            @ViewBag.ApiError
        </div>
    }

    <!-- Botón afuera del card, alineado a la derecha (igual que Especie) -->
    <div class="d-flex justify-content-end mt-3">
        <a asp-action="Crear" class="btn"
           style="background:#2FA8A2; color:#fff; border-radius:10px; padding:.5rem 1.25rem;">
            Agregar Nuevo Animal
        </a>
    </div>

    <div class="card shadow-sm mt-3" style="border:1px solid #2FA8A2; border-radius:14px;">
        <div class="card-body p-0">
            <table class="table mb-0">
                <thead>
                    <!-- Encabezado turquesa con letras blancas -->
                    <tr style="background:#2FA8A2; color:#fff;">
                        <th style="border-top-left-radius:10px;">Código</th>
                        <th>Nombre</th>
                        <th>Edad</th>
                        <th>Especie</th>
                        <th>Raza</th>
                        <th>Tamaño</th>
                        <th>Estado</th>
                        <th class="text-end" style="border-top-right-radius:10px;">Acciones</th>
                    </tr>
                </thead>
                <tbody>
                    @if (Model != null && Model.Any())
                    {
                        foreach (var item in Model)
                        {
                            <tr>
                                <td>@item.id_animal</td>
                                <td>@item.nombre</td>
                                <td>@item.edad @((item.edad == 1) ? "año" : "años")</td>
                                <td>@Txt(especies, item.id_especie)</td>
                                <td>@Txt(razas, item.id_raza)</td>
                                <td>@Txt(tamanos, item.id_tamano)</td>
                                <td>@Txt(estados, item.id_estadoAnimal)</td>
                                <td class="text-end">
                                    <a href="javascript:void(0)" data-ver-animal="@item.id_animal"
                                       class="btn btn-sm"
                                       style="background:#2FA8A2; color:#fff; border-radius:10px; padding:.35rem .8rem; margin-right:.25rem;">
                                        Ver
                                    </a>

                                    <a asp-action="Modificar" asp-route-id="@item.id_animal"
                                       class="btn btn-sm"
                                       style="background:#2FA8A2; color:#fff; border-radius:10px; padding:.35rem .8rem; margin-right:.25rem;">
                                        Modificar
                                    </a>

                                    <a asp-action="Eliminar" asp-route-id="@item.id_animal"
                                       class="btn btn-sm"
                                       style="background:#2FA8A2; color:#fff; border-radius:10px; padding:.35rem .8rem;">
                                        Eliminar
                                    </a>
                                </td>
                            </tr>
                        }
                    }
                    else
                    {
                        <tr>
                            <td colspan="8" class="text-center text-muted p-4">No hay animales cargados.</td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>
    <!-- Modal Detalle -->
    <div class="modal fade" id="modalDetalle" tabindex="-1" aria-hidden="true">
        <div class="modal-dialog modal-lg modal-dialog-centered">
            <div class="modal-content" style="border-radius:14px;">
                <div class="modal-header" style="background:#2FA8A2; color:#fff; border-top-left-radius:14px; border-top-right-radius:14px;">
                    <h5 class="modal-title">Detalle del animal</h5>
                    <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal" aria-label="Cerrar"></button>
                </div>
                <div class="modal-body" id="modalDetalleBody">
                    <!-- El partial _DetalleAnimal se carga acá -->
                </div>
            </div>
        </div>
    </div>

    @section Scripts {
        <script>
            (() => {
              // Url base generada por MVC (ej: /Animal/Detalle)
              const baseUrl = '@Url.Action("Detalle", "Animal")';

              document.addEventListener('click', async (ev) => {
                const btn = ev.target.closest('[data-ver-animal]');
                if (!btn) return;

                const id = btn.getAttribute('data-ver-animal');

                try {
                  const resp = await fetch(`${baseUrl}/${id}`, {
                    headers: { 'X-Requested-With': 'XMLHttpRequest' }
                  });

                  const html = await resp.text();
                  if (!resp.ok) throw new Error(html || `HTTP ${resp.status}`);

                  document.getElementById('modalDetalleBody').innerHTML = html;

                  // Abrir modal (Bootstrap 5)
                  const modal = new bootstrap.Modal(document.getElementById('modalDetalle'));
                  modal.show();
                } catch (err) {
                  console.error(err);
                  alert('No se pudo cargar el detalle del animal.');
                }
              });
            })();
        </script>
    }
</div>
